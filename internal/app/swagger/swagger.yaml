definitions:
  schema.CodeEnum:
    enum:
    - 0
    - -1
    - 1
    type: integer
    x-enum-varnames:
    - CodeOK
    - CodeFail
    - CodeMore
  schema.Demo:
    properties:
      code:
        description: 编号
        type: string
      created_at:
        description: 创建时间
        type: string 
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      memo:
        description: 备注
        type: string
      name:
        description: 名称
        type: string
      sort:
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - code
    - is_active
    - name
    type: object
  schema.Dict:
    properties:
      created_at:
        description: 创建时间
        type: string 
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      items:
        description: 字典项列表
        items:
          $ref: '#/definitions/schema.DictItem'
        type: array
      memo:
        description: 备注
        type: string
      name_cn:
        description: 字典名（中）
        type: string
      name_en:
        description: 字典名（英）
        type: string
      sort:
        description: 排序
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - is_active
    - items
    - name_cn
    - name_en
    type: object
  schema.DictItem:
    properties:
      created_at:
        description: 创建时间
        type: string
      dict_id:
        description: dict.id
        type: string
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      label:
        description: 显示值
        type: string
      memo:
        description: 备注
        type: string
      sort:
        description: 排序
        type: integer
      updated_at:
        description: 更新时间
        type: string
      value:
        description: 字典值
        type: integer
    required:
    - dict_id
    - is_active
    - label
    - value
    type: object
  schema.ErrorItem:
    properties:
      code:
        description: 错误码
        type: integer
      message:
        description: 错误信息
        type: string
    type: object
  schema.ErrorResult:
    properties:
      error:
        allOf:
        - $ref: '#/definitions/schema.ErrorItem'
        description: 错误项
    type: object
  schema.IDResult:
    properties:
      id:
        type: string
    type: object
  schema.ListResult:
    properties:
      list: {}
      pagination:
        $ref: '#/definitions/schema.PaginationResult'
    type: object
  schema.Menu:
    properties:
      actions:
        description: |-
          CreatedAt  *time.Time  `json:"created_at" yaml:"-"`                           // 创建时间
          UpdatedAt  *time.Time  `json:"updated_at" yaml:"-"`                           // 更新时间
        items:
          $ref: '#/definitions/schema.MenuAction'
        type: array
      created_at:
        description: 创建时间
        type: string 
      icon:
        description: 菜单图标
        type: string
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      is_leaf:
        description: 是否子叶
        type: boolean
      is_show:
        description: 是否显示
        type: boolean
      level:
        description: 层级
        type: integer
      memo:
        description: 备注
        type: string
      name:
        description: 菜单名称
        type: string
      parent_id:
        description: 父级ID
        type: string
      parent_path:
        description: 父级路径
        type: string
      router:
        description: 访问路由
        type: string
      sort:
        description: 排序值
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - is_active
    - name
    type: object
  schema.MenuAction:
    properties:
      code:
        description: 动作编号
        type: string
      id:
        description: 唯一标识
        type: string
      menu_id:
        description: 菜单ID
        type: string
      name:
        description: 动作名称
        type: string
      resources:
        description: 资源列表
        items:
          $ref: '#/definitions/schema.MenuActionResource'
        type: array
    required:
    - code
    - menu_id
    - name
    type: object
  schema.MenuActionResource:
    properties:
      action_id:
        description: 菜单动作ID
        type: string
      id:
        description: 唯一标识
        type: string
      method:
        description: 资源请求方式(支持正则)
        type: string
      path:
        description: 资源请求路径（支持/:id匹配）
        type: string
    required:
    - method
    - path
    type: object
  schema.MenuTree:
    properties:
      actions:
        description: 动作列表
        items:
          $ref: '#/definitions/schema.MenuAction'
        type: array
      children:
        description: 子级树
        items:
          $ref: '#/definitions/schema.MenuTree'
        type: array
      icon:
        description: 菜单图标
        type: string
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      is_leaf:
        description: 是否子叶
        type: boolean
      is_show:
        type: boolean
      level:
        description: 层级
        type: integer
      name:
        description: 菜单名称
        type: string
      parent_id:
        description: 父级ID
        type: string
      parent_path:
        description: 父级路径
        type: string
      router:
        description: 访问路由
        type: string
      sort:
        description: 排序值
        type: integer
    type: object
  schema.OrgDept:
    properties:
      children:
        allOf:
        - $ref: '#/definitions/schema.OrgDepts'
        description: children
      code:
        description: 助记码
        type: string
      created_at:
        description: 创建时间
        type: string 
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      is_leaf:
        description: 是否是子叶
        type: boolean
      memo:
        type: string
      merge_name:
        description: 带前缀全名称
        type: string
      name:
        description: 名称
        type: string
      org:
        $ref: '#/definitions/schema.OrgOrganShow'
      org_id:
        description: 企业id
        type: string
      parent:
        allOf:
        - $ref: '#/definitions/schema.OrgDept'
        description: parent
      pid:
        description: pid
        type: string
      sort:
        type: integer
      tree_id:
        description: 树id
        type: integer
      tree_left:
        description: 层级
        type: integer
      tree_level:
        description: 层级
        type: integer
      tree_path:
        description: 层级
        type: string
      tree_right:
        description: 层级
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - is_active
    - name
    - org_id
    type: object
  schema.OrgDepts:
    items:
      $ref: '#/definitions/schema.OrgDept'
    type: array
  schema.OrgOrgan:
    properties:
      code:
        description: 助记码
        type: string
      created_at:
        description: 创建时间
        type: string 
      haddr:
        allOf:
        - $ref: '#/definitions/schema.SysAddress'
        description: 总部地址
      id:
        description: 唯一标识
        type: string
      iden_no:
        description: 执照号
        type: string
      is_active:
        description: 状态
        type: boolean
      memo:
        type: string
      name:
        description: 名称
        type: string
      owner_id:
        description: 所有者user.id
        type: string
      sname:
        description: 短名称
        type: string
      sort:
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - is_active
    - name
    - sname
    type: object
  schema.OrgOrganShow:
    properties:
      haddr:
        allOf:
        - $ref: '#/definitions/schema.SysAddress'
        description: 总部地址
      id:
        description: 唯一标识
        type: string
      iden_no:
        description: 执照号
        type: string
      name:
        description: 名称
        type: string
      sname:
        description: 短名称
        type: string
    required:
    - name
    - sname
    type: object
  schema.OrgPosition:
    properties:
      code:
        description: 助记码
        type: string
      created_at:
        description: 创建时间
        type: string 
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      memo:
        type: string
      name:
        description: 名称
        type: string
      org:
        $ref: '#/definitions/schema.OrgOrganShow'
      org_id:
        description: 企业id
        type: string
      sort:
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - is_active
    - name
    - org_id
    type: object
  schema.OrgStaff:
    properties:
      birth_date:
        description: 出生日期
        type: string
      created_at:
        description: 创建时间
        type: string 
      cubicle:
        description: 工位
        type: string
      dept:
        allOf:
        - $ref: '#/definitions/schema.OrgDept'
        description: 部门
      dept_id:
        description: 部門id
        type: string
      empy_stat:
        description: 在职状态
        type: integer
      empyst_dict:
        type: string
      empyst_dict_id:
        description: 在职状态
        type: string
      entry_date:
        description: 入职日期
        type: string
      first_name:
        description: 名
        type: string
      gender:
        description: 性别
        type: integer
      gender_dict:
        $ref: '#/definitions/schema.Dict'
      gender_dict_id:
        description: 性别dict id
        type: string
      id:
        description: 唯一标识
        type: string
      iden_addr:
        allOf:
        - $ref: '#/definitions/schema.SysAddress'
        description: 身份证地址
      iden_addr_id:
        description: 身份证地址
        type: string
      iden_no:
        description: 身份证号
        type: string
      is_active:
        description: 状态
        type: boolean
      last_name:
        description: 姓
        type: string
      memo:
        type: string
      mobile:
        description: 电话
        type: string
      org:
        $ref: '#/definitions/schema.OrgOrganShow'
      org_id:
        description: 企业id
        type: string
      posi_id:
        description: 岗位id
        type: string
      position:
        allOf:
        - $ref: '#/definitions/schema.OrgPosition'
        description: 岗位
      rank:
        description: 职级
        type: string
      regular_date:
        description: 转正日期
        type: string
      resi_addr:
        allOf:
        - $ref: '#/definitions/schema.SysAddress'
        description: 现居地址
      resi_addr_id:
        description: 现居地址
        type: string
      resign_date:
        description: 离职日期
        type: string
      sort:
        type: integer
      updated_at:
        description: 更新时间
        type: string
      worker_no:
        description: 工号
        type: string
    required:
    - birth_date
    - empy_stat
    - empyst_dict_id
    - entry_date
    - first_name
    - gender
    - gender_dict_id
    - is_active
    - last_name
    - mobile
    - org_id
    type: object
  schema.PaginationResult:
    properties:
      after:
        type: string
      before:
        type: string
      current:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  schema.Role:
    properties:
      created_at:
        description: 创建时间
        type: string 
      deleted_at:
        description: 更新时间
        type: string
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      memo:
        description: 备注
        type: string
      name:
        description: 角色名称
        type: string
      role_menus:
        description: 角色菜单列表
        items:
          $ref: '#/definitions/schema.RoleMenu'
        type: array
      sort:
        description: 排序值
        type: integer
      updated_at:
        description: 更新时间
        type: string
    required:
    - is_active
    - name
    - role_menus
    type: object
  schema.RoleMenu:
    properties:
      action_id:
        description: 动作ID
        type: string
      id:
        description: 唯一标识
        type: string
      menu_id:
        description: 菜单ID
        type: string
      role_id:
        description: 角色ID
        type: string
    required:
    - action_id
    - menu_id
    - role_id
    type: object
  schema.SignInCaptcha:
    properties:
      captcha_id:
        description: 验证码ID
        type: string
    type: object
  schema.SignInParam:
    properties:
      captcha_code:
        description: 验证码
        type: string
      captcha_id:
        description: 验证码ID
        type: string
      password:
        description: 密码(md5加密)
        type: string
      user_name:
        description: 用户名
        type: string
    required:
    - captcha_code
    - captcha_id
    - password
    - user_name
    type: object
  schema.SignInTokenInfo:
    properties:
      access_token:
        description: 访问令牌
        type: string
      expires_at:
        description: 令牌到期时间戳
        type: integer
      token_type:
        description: 令牌类型
        type: string
    type: object
  schema.StatusResult:
    properties:
      burden: {}
      code:
        $ref: '#/definitions/schema.CodeEnum'
      message:
        type: string
    type: object
  schema.SysAddress:
    properties:
      area_code:
        description: 电话区号码
        type: string
      city:
        description: 区/市
        type: string
      city_id:
        description: 区/市ID
        type: string
      country:
        description: 国
        type: string
      country_id:
        description: 国ID
        type: string
      county:
        description: 区/县
        type: string
      county_id:
        description: 区/县ID
        type: string
      created_at:
        description: 创建时间
        type: string 
      daddr:
        description: 详细地址
        type: string
      first_name:
        description: 联系人名
        type: string
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      last_name:
        description: 联系人姓
        type: string
      mobile:
        description: 电话
        type: string
      province:
        description: 省
        type: string
      province_id:
        description: 省/市ID
        type: string
      sort:
        type: integer
      updated_at:
        description: 更新时间
        type: string
      zip_code:
        description: 邮政编码
        type: string
    type: object
  schema.SysDistrict:
    properties:
      abbr:
        description: 简称
        type: string
      area_code:
        description: 电话区号码
        type: string
      children:
        allOf:
        - $ref: '#/definitions/schema.SysDistricts'
        description: children
      created_at:
        description: 创建时间
        type: string 
      extra:
        description: 带前缀简名称
        type: string
      id:
        description: 唯一标识
        type: string
      initials:
        description: 简拼
        type: string
      is_active:
        description: 状态
        type: boolean
      is_del:
        type: boolean
      is_direct:
        description: 是否是直辖
        type: boolean
      is_hot:
        description: 热门城市
        type: boolean
      is_leaf:
        description: 是否是子叶
        type: boolean
      is_main:
        description: 主要城市
        type: boolean
      is_real:
        description: 是否虚拟区域
        type: boolean
      latitude:
        description: 经度
        type: number
      longitude:
        description: 经度
        type: number
      merge_name:
        description: 带前缀全名称
        type: string
      merge_sname:
        description: 带前缀简名称
        type: string
      name:
        description: 名称
        type: string
      name_en:
        description: 名称[英语]
        type: string
      parent:
        allOf:
        - $ref: '#/definitions/schema.SysDistrict'
        description: parent
      pid:
        description: pid
        type: string
      pinyin:
        description: 简拼
        type: string
      sname:
        description: 短名称[英语]
        type: string
      sname_en:
        description: 短名称
        type: string
      sort:
        type: integer
      st_code:
        description: 统计局区域编码
        type: string
      suffix:
        description: 区域后缀,省/市/区/旗/盟/自治区/
        type: string
      tree_id:
        description: 树id
        type: integer
      tree_left:
        description: 层级
        type: integer
      tree_level:
        description: 层级
        type: integer
      tree_path:
        description: 层级
        type: string
      tree_right:
        description: 层级
        type: integer
      updated_at:
        description: 更新时间
        type: string
      zip_code:
        description: 邮政编码
        type: string
    required:
    - is_active
    - name
    type: object
  schema.SysDistricts:
    items:
      $ref: '#/definitions/schema.SysDistrict'
    type: array
  schema.UpdatePasswordParam:
    properties:
      new_password:
        description: 新密码(md5加密)
        type: string
      old_password:
        description: 旧密码(md5加密)
        type: string
    required:
    - new_password
    - old_password
    type: object
  schema.User:
    properties:
      created_at:
        description: 创建时间
        type: string 
      email:
        description: 邮箱
        type: string
      first_name:
        description: 真实姓名
        type: string
      gender:
        description: 性别(1:男,2:女)
        maximum: 3
        minimum: 1
        type: integer
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      last_name:
        description: 真实姓名
        type: string
      mobile:
        description: 手机号
        type: string
      password:
        description: 密码
        type: string
      real_name:
        description: 真实姓名
        type: string
      updated_at:
        description: 更新时间
        type: string
      user_name:
        description: 用户名
        type: string
      user_roles:
        description: 角色授权
        items:
          $ref: '#/definitions/schema.UserRole'
        type: array
    required:
    - first_name
    - is_active
    - last_name
    - user_name
    - user_roles
    type: object
  schema.UserRole:
    properties:
      id:
        description: 唯一标识
        type: string
      role_id:
        description: 角色ID
        type: string
      user_id:
        description: 用户ID
        type: string
    type: object
  schema.UserShow:
    properties:
      created_at:
        description: 创建时间
        type: string
      email:
        description: 邮箱
        type: string
      first_name:
        description: 真实名
        type: string
      id:
        description: 唯一标识
        type: string
      is_active:
        description: 状态
        type: boolean
      last_name:
        description: 真实姓
        type: string
      mobile:
        description: 手机号
        type: string
      real_name:
        description: 真实姓名
        type: string
      roles:
        description: 授权角色列表
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      user_name:
        description: 用户名
        type: string
    type: object
  schema.UserSignInInfo:
    properties:
      first_name:
        description: 真实姓名
        type: string
      last_name:
        description: 真实姓名
        type: string
      real_name:
        description: 真实姓名
        type: string
      roles:
        description: 角色列表
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      user_id:
        description: 用户ID
        type: string
      user_name:
        description: 用户名
        type: string
    type: object
info:
  contact: {}
  description: RBAC scaffolding based on GIN + ENT + CASBIN + WIRE.
  title: omgind
  version: 7.0.0
paths:
  /api/v2/demos:
    get:
      parameters:
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - description: 编号
        in: query
        name: code
        type: string
      - description: asc desc
        in: query
        name: code__order
        type: string
      - description: create_at 结束
        in: query
        name: created_at__ed
        type: integer
      - description: asc, desc
        in: query
        name: created_at__order
        type: string
      - description: create_at 开始
        in: query
        name: created_at__st
        type: integer
      - description: 当前页
        in: query
        name: current
        type: integer
      - description: 状态
        in: query
        name: is_active
        type: boolean
      - description: 名称
        in: query
        name: name
        type: string
      - description: asc desc
        in: query
        name: name__order
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: 查询值
        in: query
        name: q
        type: string
      - description: create_at 结束
        in: query
        name: sort__ed
        type: integer
      - description: asc desc
        in: query
        name: sort__order
        type: string
      - description: create_at 结束
        in: query
        name: sort__st
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.Demo'
                  type: array
                pagination:
                  $ref: '#/definitions/schema.PaginationResult'
              type: object
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - Demo
    post:
      parameters:
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Demo'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - Demo
  /api/v2/demos/{id}:
    delete:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - Demo
    get:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Demo'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - Demo
    put:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Demo'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - Demo
  /api/v2/demos/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - Demo
  /api/v2/demos/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - Demo
  /api/v2/org-depts:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - in: query
        name: code
        type: string
      - description: |-
          example: "asc"
          example: "desc"
        in: query
        name: created_at__order
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - in: query
        name: is_active
        type: boolean
      - description: |-
          example: "asc"
          example: "desc"
        in: query
        name: is_active__order
        type: string
      - description: 是否是子叶
        in: query
        name: is_leaf
        type: boolean
      - description: 是否真实
        in: query
        name: is_real
        type: boolean
      - description: 是否显示
        in: query
        name: is_show
        type: boolean
      - in: query
        name: name
        type: string
      - description: |-
          example: "asc"
          example: "desc"
        in: query
        name: name__order
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - in: query
        name: org_id
        type: string
      - description: parent.pid
        in: query
        name: p_pid
        type: string
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: pid
        in: query
        name: pid
        type: string
      - description: 模糊查询
        in: query
        name: q
        type: string
      - description: |-
          example: "asc"
          example: "desc"
        in: query
        name: sort__order
        type: string
      - description: tree_left 结束
        in: query
        name: treeLeft
        type: integer
      - description: 树id
        in: query
        name: tree_id
        type: integer
      - description: |-
          example: "asc"
          example: "desc"
        in: query
        name: tree_id__order
        type: string
      - description: tree_left 结束
        in: query
        name: tree_left__ed
        type: integer
      - description: 左值 asc desc
        in: query
        name: tree_left__order
        type: string
      - description: tree_left 结束
        in: query
        name: tree_left__st
        type: integer
      - description: tree_level
        in: query
        name: tree_level
        type: integer
      - description: 层级 asc desc
        in: query
        name: tree_level__order
        type: string
      - description: tree_right 结束
        in: query
        name: tree_right
        type: integer
      - description: tree_right 结束
        in: query
        name: tree_right__ed
        type: integer
      - description: tree_right 结束
        in: query
        name: tree_right__st
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/schema.ListResult'
              - properties:
                  list:
                    items:
                      $ref: '#/definitions/schema.OrgDept'
                    type: array
                  pagination:
                    $ref: '#/definitions/schema.PaginationResult'
                type: object
            type: array
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 部门管理
    post:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgDept'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 部门管理
  /api/v2/org-depts/{id}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 部门管理
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgDept'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 部门管理
    put:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgDept'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 部门管理
  /api/v2/org-depts/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 部门管理
  /api/v2/org-depts/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 部门管理
  /api/v2/org-depts/{id}/view:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgDept'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 部门管理
  /api/v2/org-organs:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - description: asc, desc
        in: query
        name: city_id__order
        type: string
      - in: query
        name: code
        type: string
      - description: |-
          example: asc
          example: desc
        in: query
        name: country_id__order
        type: string
      - description: asc, desc
        in: query
        name: county_id__order
        type: string
      - description: asc, desc
        in: query
        name: created_at__order
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - in: query
        name: is_active
        type: boolean
      - description: asc desc
        in: query
        name: is_active__order
        type: string
      - in: query
        name: name
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - in: query
        name: owner_id
        type: string
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: asc, desc
        in: query
        name: province_id__order
        type: string
      - description: 模糊查询
        in: query
        name: q
        type: string
      - description: asc desc
        in: query
        name: sort__order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/schema.ListResult'
              - properties:
                  list:
                    items:
                      $ref: '#/definitions/schema.OrgOrgan'
                    type: array
                  pagination:
                    $ref: '#/definitions/schema.PaginationResult'
                type: object
            type: array
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 组织管理
    post:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgOrgan'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 组织管理
  /api/v2/org-organs/{id}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 组织管理
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgOrgan'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 组织管理
    put:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgOrgan'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 组织管理
  /api/v2/org-organs/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 组织管理
  /api/v2/org-organs/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 组织管理
  /api/v2/org-organs/{id}/view:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgOrgan'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 组织管理
  /api/v2/org-positions:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - in: query
        name: code
        type: string
      - description: |-
          example: asc
          example: desc
        in: query
        name: created_at__order
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - in: query
        name: is_active
        type: boolean
      - in: query
        name: is_active__order
        type: string
      - in: query
        name: name
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - in: query
        name: org_id
        type: string
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: 模糊查询
        in: query
        name: q
        type: string
      - description: asc desc
        in: query
        name: sort__order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/schema.ListResult'
              - properties:
                  list:
                    items:
                      $ref: '#/definitions/schema.OrgPosition'
                    type: array
                  pagination:
                    $ref: '#/definitions/schema.PaginationResult'
                type: object
            type: array
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 职位管理
    post:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgPosition'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 职位管理
  /api/v2/org-positions/{id}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 职位管理
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgPosition'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 职位管理
    put:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgPosition'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 职位管理
  /api/v2/org-positions/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 职位管理
  /api/v2/org-positions/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 职位管理
  /api/v2/org-positions/{id}/view:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgPosition'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 职位管理
  /api/v2/org-staffs:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - description: asc/desc
        in: query
        name: birth_date__order
        type: string
      - description: |-
          example: asc
          example: desc
        in: query
        name: created_at__order
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - description: asc/desc
        in: query
        name: entry_date__order
        type: string
      - in: query
        name: first_name
        type: string
      - in: query
        name: gender
        type: integer
      - in: query
        name: is_active
        type: boolean
      - in: query
        name: is_active__order
        type: string
      - in: query
        name: last_name
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - in: query
        name: org_id
        type: string
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: 模糊查询
        in: query
        name: q
        type: string
      - in: query
        name: rank__ed
        type: string
      - description: asc, desc
        in: query
        name: rank__order
        type: string
      - in: query
        name: rank__st
        type: string
      - description: asc/desc
        in: query
        name: regular_date__order
        type: string
      - description: asc/desc
        in: query
        name: resign_date__order
        type: string
      - description: asc/desc
        in: query
        name: sort__order
        type: string
      - description: asc/desc
        in: query
        name: worker_no__order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/schema.ListResult'
              - properties:
                  list:
                    items:
                      $ref: '#/definitions/schema.OrgStaff'
                    type: array
                  pagination:
                    $ref: '#/definitions/schema.PaginationResult'
                type: object
            type: array
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 员工管理
    post:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgStaff'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 员工管理
  /api/v2/org-staffs/{id}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 员工管理
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgStaff'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 员工管理
    put:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.OrgStaff'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 员工管理
  /api/v2/org-staffs/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 员工管理
  /api/v2/org-staffs/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 员工管理
  /api/v2/org-staffs/{id}/view:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OrgStaff'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 员工管理
  /api/v2/pub/current/menutree:
    get:
      responses:
        "200":
          description: 查询结果
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.MenuTree'
                  type: array
              type: object
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询当前用户菜单树
      tags:
      - 登录管理
  /api/v2/pub/current/password:
    put:
      parameters:
      - description: 请求参数
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.UpdatePasswordParam'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新个人密码
      tags:
      - 登录管理
  /api/v2/pub/current/user:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.UserSignInInfo'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - 登录管理
  /api/v2/pub/refresh-token:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SignInTokenInfo'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 刷新令牌
      tags:
      - 登录管理
  /api/v2/pub/signin:
    post:
      parameters:
      - description: 请求参数
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.SignInParam'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SignInTokenInfo'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      summary: 用户登录
      tags:
      - 登录管理
  /api/v2/pub/signin/captcha:
    get:
      parameters:
      - description: 验证码ID
        in: query
        name: id
        required: true
        type: string
      - description: 重新加载
        in: query
        name: reload
        type: string
      produces:
      - image/png
      responses:
        "200":
          description: 图形验证码
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      summary: 响应图形验证码
      tags:
      - 登录管理
  /api/v2/pub/signin/captchaid:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SignInCaptcha'
      summary: 获取验证码信息
      tags:
      - 登录管理
  /api/v2/pub/signin/exit:
    post:
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
      summary: 用户登出
      tags:
      - 登录管理
  /api/v2/sys-addresses:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: id之后的
        in: query
        name: after
        type: string
      - in: query
        name: area_code
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - in: query
        name: city_id
        type: string
      - description: asc, desc
        in: query
        name: city_id__order
        type: string
      - in: query
        name: country_id
        type: string
      - description: asc, desc
        in: query
        name: country_id__order
        type: string
      - in: query
        name: county_id
        type: string
      - description: asc, desc
        in: query
        name: county_id__order
        type: string
      - description: |-
          example: asc
          example: desc
        in: query
        name: created_at__order
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - description: asc, desc
        in: query
        name: id__order
        type: string
      - in: query
        name: mobile
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - in: query
        name: province_id
        type: string
      - description: asc, desc
        in: query
        name: province_id__order
        type: string
      - description: 模糊查询
        in: query
        name: q
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/schema.ListResult'
              - properties:
                  list:
                    items:
                      $ref: '#/definitions/schema.SysAddress'
                    type: array
                  pagination:
                    $ref: '#/definitions/schema.PaginationResult'
                type: object
            type: array
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 地址管理
    post:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.SysAddress'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 地址管理
  /api/v2/sys-addresses/{id}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 地址管理
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SysAddress'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 地址管理
    put:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.SysAddress'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 地址管理
  /api/v2/sys-addresses/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 地址管理
  /api/v2/sys-addresses/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 地址管理
  /api/v2/sys-dicts:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - description: 唯一标识列表
        in: query
        items:
          type: string
        name: ids
        type: array
      - in: query
        name: is_active
        type: boolean
      - description: asc/desc
        in: query
        name: is_active__order
        type: string
      - description: 字典名称(中)
        in: query
        name: name_cn
        type: string
      - description: asc/desc
        in: query
        name: name_cn__order
        type: string
      - description: 字典名称(英)
        in: query
        name: name_en
        type: string
      - description: |-
          example: asc
          example: desc
        in: query
        name: name_en__order
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: 模糊查询
        in: query
        name: q
        type: string
      - description: asc/desc
        in: query
        name: sort__order
        type: string
      - in: query
        name: wi
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.Dict'
                  type: array
                pagination:
                  $ref: '#/definitions/schema.PaginationResult'
              type: object
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      summary: 查询数据
      tags:
      - 字典
    post:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Dict'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      summary: 创建数据
      tags:
      - 字典
  /api/v2/sys-dicts/{id}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      summary: 删除数据
      tags:
      - 字典
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Dict'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      summary: 查询指定数据
      tags:
      - 字典
    put:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Dict'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      summary: 更新数据
      tags:
      - 字典
  /api/v2/sys-dicts/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 字典
  /api/v2/sys-dicts/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 字典
  /api/v2/sys-district:
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - description: |-
          example: asc
          example: desc
        in: query
        name: created_at__order
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - description: 简拼
        in: query
        name: initials
        type: string
      - description: 状态
        in: query
        name: is_active
        type: boolean
      - description: 是否是直辖
        in: query
        name: is_direct
        type: boolean
      - description: 热门城市
        in: query
        name: is_hot
        type: boolean
      - description: 是否是子叶
        in: query
        name: is_leaf
        type: boolean
      - description: 主要城市
        in: query
        name: is_main
        type: boolean
      - description: 状态
        in: query
        name: is_real
        type: boolean
      - description: 名称
        in: query
        name: name
        type: string
      - description: asc desc
        in: query
        name: name__order
        type: string
      - description: 名称
        in: query
        name: name_en
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - description: parent.area_code
        in: query
        name: p_area_code
        type: string
      - description: parent.initials
        in: query
        name: p_initials
        type: string
      - description: parent.pid
        in: query
        name: p_pid
        type: string
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: pid
        in: query
        name: pid
        type: string
      - description: 模糊查询
        in: query
        name: q
        type: string
      - description: 区域后缀,省/市/区/旗/盟/自治区/
        in: query
        name: suffix
        type: string
      - description: tree_left 结束
        in: query
        name: treeLeft
        type: integer
      - description: 树id
        in: query
        name: tree_id
        type: integer
      - description: asc desc
        in: query
        name: tree_id__order
        type: string
      - description: tree_left 结束
        in: query
        name: tree_left__ed
        type: integer
      - description: 左值 asc desc
        in: query
        name: tree_left__order
        type: string
      - description: tree_left 结束
        in: query
        name: tree_left__st
        type: integer
      - description: tree_level
        in: query
        name: tree_level
        type: integer
      - description: 层级 asc desc
        in: query
        name: tree_level__order
        type: string
      - description: tree_right 结束
        in: query
        name: tree_right
        type: integer
      - description: tree_right 结束
        in: query
        name: tree_right__ed
        type: integer
      - description: tree_right 结束
        in: query
        name: tree_right__st
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/schema.ListResult'
              - properties:
                  list:
                    items:
                      $ref: '#/definitions/schema.SysDistrict'
                    type: array
                  pagination:
                    $ref: '#/definitions/schema.PaginationResult'
                type: object
            type: array
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 行政区域
    post:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.SysDistrict'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 行政区域
  /api/v2/sys-district/{id}:
    delete:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 行政区域
    get:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SysDistrict'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 行政区域
    put:
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.SysDistrict'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 行政区域
  /api/v2/sys-district/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 行政区域
  /api/v2/sys-district/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 行政区域
  /api/v2/sys-district/{id}/subs:
    get:
      parameters:
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - description: |-
          example: asc
          example: desc
        in: query
        name: created_at__order
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - description: 简拼
        in: query
        name: initials
        type: string
      - description: 状态
        in: query
        name: is_active
        type: boolean
      - description: 是否是直辖
        in: query
        name: is_direct
        type: boolean
      - description: 热门城市
        in: query
        name: is_hot
        type: boolean
      - description: 是否是子叶
        in: query
        name: is_leaf
        type: boolean
      - description: 主要城市
        in: query
        name: is_main
        type: boolean
      - description: 状态
        in: query
        name: is_real
        type: boolean
      - description: 名称
        in: query
        name: name
        type: string
      - description: asc desc
        in: query
        name: name__order
        type: string
      - description: 名称
        in: query
        name: name_en
        type: string
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - description: parent.area_code
        in: query
        name: p_area_code
        type: string
      - description: parent.initials
        in: query
        name: p_initials
        type: string
      - description: parent.pid
        in: query
        name: p_pid
        type: string
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: pid
        in: query
        name: pid
        type: string
      - description: 模糊查询
        in: query
        name: q
        type: string
      - description: 区域后缀,省/市/区/旗/盟/自治区/
        in: query
        name: suffix
        type: string
      - description: tree_left 结束
        in: query
        name: treeLeft
        type: integer
      - description: 树id
        in: query
        name: tree_id
        type: integer
      - description: asc desc
        in: query
        name: tree_id__order
        type: string
      - description: tree_left 结束
        in: query
        name: tree_left__ed
        type: integer
      - description: 左值 asc desc
        in: query
        name: tree_left__order
        type: string
      - description: tree_left 结束
        in: query
        name: tree_left__st
        type: integer
      - description: tree_level
        in: query
        name: tree_level
        type: integer
      - description: 层级 asc desc
        in: query
        name: tree_level__order
        type: string
      - description: tree_right 结束
        in: query
        name: tree_right
        type: integer
      - description: tree_right 结束
        in: query
        name: tree_right__ed
        type: integer
      - description: tree_right 结束
        in: query
        name: tree_right__st
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/schema.ListResult'
              - properties:
                  list:
                    items:
                      $ref: '#/definitions/schema.SysDistrict'
                    type: array
                  pagination:
                    $ref: '#/definitions/schema.PaginationResult'
                type: object
            type: array
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 行政区域
  /api/v2/sys-menus:
    get:
      parameters:
      - default: 1
        description: 分页索引
        in: query
        name: current
        required: true
        type: integer
      - default: 10
        description: 分页大小
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 查询值
        in: query
        name: q
        type: string
      - description: 是否有效
        in: query
        name: is_active
        type: boolean
      - description: 显示状态(true:显示 false:隐藏)
        in: query
        name: isShow
        type: boolean
      - description: 父级ID
        in: query
        name: parentID
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.Menu'
                  type: array
                pagination:
                  $ref: '#/definitions/schema.PaginationResult'
              type: object
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 菜单管理
    post:
      parameters:
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Menu'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 菜单管理
  /api/v2/sys-menus.tree:
    get:
      parameters:
      - description: 是否有效
        in: query
        name: is_active
        type: boolean
      - description: 父级ID
        in: query
        name: parentID
        type: string
      responses:
        "200":
          description: 查询结果
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.MenuTree'
                  type: array
              type: object
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询菜单树
      tags:
      - 菜单管理
  /api/v2/sys-menus/{id}:
    delete:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 菜单管理
    get:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Menu'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 菜单管理
    put:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Menu'
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 菜单管理
  /api/v2/sys-menus/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 菜单管理
  /api/v2/sys-menus/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 菜单管理
  /api/v2/sys-roles:
    get:
      parameters:
      - default: 1
        description: 分页索引
        in: query
        name: current
        required: true
        type: integer
      - default: 10
        description: 分页大小
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 查询值
        in: query
        name: q
        type: string
      - description: 是否有效
        in: query
        name: is_active
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.Role'
                  type: array
                pagination:
                  $ref: '#/definitions/schema.PaginationResult'
              type: object
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 角色管理
    post:
      parameters:
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Role'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 角色管理
  /api/v2/sys-roles.select:
    get:
      parameters:
      - description: 查询值
        in: query
        name: q
        type: string
      - description: 是否有效
        in: query
        name: is_active
        type: boolean
      responses:
        "200":
          description: 查询结果
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.Role'
                  type: array
              type: object
        "400":
          description: '{error:{code:0,message:未知的查询类型}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询选择数据
      tags:
      - 角色管理
  /api/v2/sys-roles/{id}:
    delete:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 角色管理
    get:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Role'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 角色管理
    put:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.Role'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Role'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 角色管理
  /api/v2/sys-roles/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 角色管理
  /api/v2/sys-roles/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 角色管理
  /api/v2/sys-users:
    get:
      parameters:
      - description: id之后的
        in: query
        name: after
        type: string
      - description: id之前的
        in: query
        name: before
        type: string
      - description: 当前页
        in: query
        name: current
        type: integer
      - in: query
        name: isActive
        type: boolean
      - description: 是否仅查询count
        in: query
        name: onlyCount
        type: boolean
      - description: 页大小
        in: query
        maximum: 100
        name: pageSize
        type: integer
      - description: 是否使用分页查询
        in: query
        name: pagination
        type: boolean
      - description: 模糊查询
        in: query
        name: q
        type: string
      - description: 角色ID列表
        in: query
        items:
          type: string
        name: roleIDs
        type: array
      - description: 用户名
        in: query
        name: userName
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schema.ListResult'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/schema.UserShow'
                  type: array
                pagination:
                  $ref: '#/definitions/schema.PaginationResult'
              type: object
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询数据
      tags:
      - 用户管理
    post:
      parameters:
      - description: 创建数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.IDResult'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 创建数据
      tags:
      - 用户管理
  /api/v2/sys-users/{id}:
    delete:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 删除数据
      tags:
      - 用户管理
    get:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.User'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "404":
          description: '{error:{code:0,message:资源不存在}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 查询指定数据
      tags:
      - 用户管理
    put:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      - description: 更新数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.User'
        "400":
          description: '{error:{code:0,message:无效的请求参数}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 更新数据
      tags:
      - 用户管理
  /api/v2/sys-users/{id}/disable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 禁用数据
      tags:
      - 用户管理
  /api/v2/sys-users/{id}/enable:
    patch:
      parameters:
      - description: 唯一标识
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{status:OK}'
          schema:
            $ref: '#/definitions/schema.StatusResult'
        "401":
          description: '{error:{code:0,message:未授权}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
        "500":
          description: '{error:{code:0,message:服务器错误}}'
          schema:
            $ref: '#/definitions/schema.ErrorResult'
      security:
      - ApiKeyAuth: []
      summary: 启用数据
      tags:
      - 用户管理
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
