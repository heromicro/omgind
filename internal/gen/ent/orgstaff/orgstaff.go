// Code generated by ent, DO NOT EDIT.

package orgstaff

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the orgstaff type in the database.
	Label = "org_staff"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIsDel holds the string denoting the is_del field in the database.
	FieldIsDel = "is_del"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldOrgID holds the string denoting the org_id field in the database.
	FieldOrgID = "org_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "crtd_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "uptd_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "dltd_at"
	// FieldIsActive holds the string denoting the is_active field in the database.
	FieldIsActive = "is_active"
	// FieldMemo holds the string denoting the memo field in the database.
	FieldMemo = "memo"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldMobile holds the string denoting the mobile field in the database.
	FieldMobile = "mobile"
	// FieldGender holds the string denoting the gender field in the database.
	FieldGender = "gender"
	// FieldBirthDate holds the string denoting the birth_date field in the database.
	FieldBirthDate = "birth_date"
	// FieldIdenNo holds the string denoting the iden_no field in the database.
	FieldIdenNo = "iden_no"
	// FieldWorkerNo holds the string denoting the worker_no field in the database.
	FieldWorkerNo = "worker_no"
	// FieldCubicle holds the string denoting the cubicle field in the database.
	FieldCubicle = "cubicle"
	// FieldEntryDate holds the string denoting the entry_date field in the database.
	FieldEntryDate = "entry_date"
	// FieldRegularDate holds the string denoting the regular_date field in the database.
	FieldRegularDate = "regu_date"
	// FieldResignDate holds the string denoting the resign_date field in the database.
	FieldResignDate = "resign_date"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// Table holds the table name of the orgstaff in the database.
	Table = "org_staffs"
)

// Columns holds all SQL columns for orgstaff fields.
var Columns = []string{
	FieldID,
	FieldIsDel,
	FieldSort,
	FieldOrgID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldIsActive,
	FieldMemo,
	FieldFirstName,
	FieldLastName,
	FieldMobile,
	FieldGender,
	FieldBirthDate,
	FieldIdenNo,
	FieldWorkerNo,
	FieldCubicle,
	FieldEntryDate,
	FieldRegularDate,
	FieldResignDate,
	FieldCreator,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsDel holds the default value on creation for the "is_del" field.
	DefaultIsDel bool
	// DefaultSort holds the default value on creation for the "sort" field.
	DefaultSort int32
	// OrgIDValidator is a validator for the "org_id" field. It is called by the builders before save.
	OrgIDValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultIsActive holds the default value on creation for the "is_active" field.
	DefaultIsActive bool
	// DefaultMemo holds the default value on creation for the "memo" field.
	DefaultMemo string
	// MemoValidator is a validator for the "memo" field. It is called by the builders before save.
	MemoValidator func(string) error
	// FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	FirstNameValidator func(string) error
	// LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	LastNameValidator func(string) error
	// MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	MobileValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)

// Gender defines the type for the "gender" enum field.
type Gender string

// Gender values.
const (
	GenderMale   Gender = "M"
	GenderFemale Gender = "F"
)

func (ge Gender) String() string {
	return string(ge)
}

// GenderValidator is a validator for the "gender" field enum values. It is called by the builders before save.
func GenderValidator(ge Gender) error {
	switch ge {
	case GenderMale, GenderFemale:
		return nil
	default:
		return fmt.Errorf("orgstaff: invalid enum value for gender field: %q", ge)
	}
}
