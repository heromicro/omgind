// Code generated by ent, DO NOT EDIT.

package orgstaff

import (
	"time"
)

const (
	// Label holds the string label denoting the orgstaff type in the database.
	Label = "org_staff"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIsDel holds the string denoting the is_del field in the database.
	FieldIsDel = "is_del"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "crtd_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "uptd_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "dltd_at"
	// FieldIsActive holds the string denoting the is_active field in the database.
	FieldIsActive = "is_active"
	// FieldMemo holds the string denoting the memo field in the database.
	FieldMemo = "memo"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldMobile holds the string denoting the mobile field in the database.
	FieldMobile = "mobile"
	// FieldGender holds the string denoting the gender field in the database.
	FieldGender = "gender"
	// FieldGndrDictID holds the string denoting the gndr_dict_id field in the database.
	FieldGndrDictID = "gndr_dict_id"
	// FieldBirthDate holds the string denoting the birth_date field in the database.
	FieldBirthDate = "birth_date"
	// FieldIdenNo holds the string denoting the iden_no field in the database.
	FieldIdenNo = "iden_no"
	// FieldIdenAddrID holds the string denoting the iden_addr_id field in the database.
	FieldIdenAddrID = "idaddr_id"
	// FieldResiAddrID holds the string denoting the resi_addr_id field in the database.
	FieldResiAddrID = "rsaddr_id"
	// FieldWorkerNo holds the string denoting the worker_no field in the database.
	FieldWorkerNo = "worker_no"
	// FieldCubicle holds the string denoting the cubicle field in the database.
	FieldCubicle = "cubicle"
	// FieldEntryDate holds the string denoting the entry_date field in the database.
	FieldEntryDate = "entry_date"
	// FieldRegularDate holds the string denoting the regular_date field in the database.
	FieldRegularDate = "regu_date"
	// FieldResignDate holds the string denoting the resign_date field in the database.
	FieldResignDate = "resign_date"
	// FieldOrgID holds the string denoting the org_id field in the database.
	FieldOrgID = "org_id"
	// FieldEmpStat holds the string denoting the emp_stat field in the database.
	FieldEmpStat = "emp_stat"
	// FieldEmpstDictID holds the string denoting the empst_dict_id field in the database.
	FieldEmpstDictID = "empst_dict_id"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// EdgeOrgan holds the string denoting the organ edge name in mutations.
	EdgeOrgan = "organ"
	// EdgeIdenAddr holds the string denoting the iden_addr edge name in mutations.
	EdgeIdenAddr = "iden_addr"
	// EdgeResiAddr holds the string denoting the resi_addr edge name in mutations.
	EdgeResiAddr = "resi_addr"
	// Table holds the table name of the orgstaff in the database.
	Table = "org_staffs"
	// OrganTable is the table that holds the organ relation/edge.
	OrganTable = "org_staffs"
	// OrganInverseTable is the table name for the OrgOrgan entity.
	// It exists in this package in order to avoid circular dependency with the "orgorgan" package.
	OrganInverseTable = "org_organs"
	// OrganColumn is the table column denoting the organ relation/edge.
	OrganColumn = "org_id"
	// IdenAddrTable is the table that holds the iden_addr relation/edge.
	IdenAddrTable = "org_staffs"
	// IdenAddrInverseTable is the table name for the SysAddress entity.
	// It exists in this package in order to avoid circular dependency with the "sysaddress" package.
	IdenAddrInverseTable = "sys_addresses"
	// IdenAddrColumn is the table column denoting the iden_addr relation/edge.
	IdenAddrColumn = "idaddr_id"
	// ResiAddrTable is the table that holds the resi_addr relation/edge.
	ResiAddrTable = "org_staffs"
	// ResiAddrInverseTable is the table name for the SysAddress entity.
	// It exists in this package in order to avoid circular dependency with the "sysaddress" package.
	ResiAddrInverseTable = "sys_addresses"
	// ResiAddrColumn is the table column denoting the resi_addr relation/edge.
	ResiAddrColumn = "rsaddr_id"
)

// Columns holds all SQL columns for orgstaff fields.
var Columns = []string{
	FieldID,
	FieldIsDel,
	FieldSort,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldIsActive,
	FieldMemo,
	FieldFirstName,
	FieldLastName,
	FieldMobile,
	FieldGender,
	FieldGndrDictID,
	FieldBirthDate,
	FieldIdenNo,
	FieldIdenAddrID,
	FieldResiAddrID,
	FieldWorkerNo,
	FieldCubicle,
	FieldEntryDate,
	FieldRegularDate,
	FieldResignDate,
	FieldOrgID,
	FieldEmpStat,
	FieldEmpstDictID,
	FieldCreator,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsDel holds the default value on creation for the "is_del" field.
	DefaultIsDel bool
	// DefaultSort holds the default value on creation for the "sort" field.
	DefaultSort int32
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultIsActive holds the default value on creation for the "is_active" field.
	DefaultIsActive bool
	// DefaultMemo holds the default value on creation for the "memo" field.
	DefaultMemo string
	// MemoValidator is a validator for the "memo" field. It is called by the builders before save.
	MemoValidator func(string) error
	// FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	FirstNameValidator func(string) error
	// LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	LastNameValidator func(string) error
	// MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	MobileValidator func(string) error
	// GndrDictIDValidator is a validator for the "gndr_dict_id" field. It is called by the builders before save.
	GndrDictIDValidator func(string) error
	// IdenAddrIDValidator is a validator for the "iden_addr_id" field. It is called by the builders before save.
	IdenAddrIDValidator func(string) error
	// ResiAddrIDValidator is a validator for the "resi_addr_id" field. It is called by the builders before save.
	ResiAddrIDValidator func(string) error
	// WorkerNoValidator is a validator for the "worker_no" field. It is called by the builders before save.
	WorkerNoValidator func(string) error
	// CubicleValidator is a validator for the "cubicle" field. It is called by the builders before save.
	CubicleValidator func(string) error
	// OrgIDValidator is a validator for the "org_id" field. It is called by the builders before save.
	OrgIDValidator func(string) error
	// DefaultEmpStat holds the default value on creation for the "emp_stat" field.
	DefaultEmpStat int32
	// EmpstDictIDValidator is a validator for the "empst_dict_id" field. It is called by the builders before save.
	EmpstDictIDValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
