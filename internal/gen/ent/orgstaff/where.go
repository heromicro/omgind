// Code generated by ent, DO NOT EDIT.

package orgstaff

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/heromicro/omgind/internal/gen/ent/internal"
	"github.com/heromicro/omgind/internal/gen/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldID, id))
}

// IsDel applies equality check predicate on the "is_del" field. It's identical to IsDelEQ.
func IsDel(v bool) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIsDel, v))
}

// Sort applies equality check predicate on the "sort" field. It's identical to SortEQ.
func Sort(v int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldSort, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldDeletedAt, v))
}

// IsActive applies equality check predicate on the "is_active" field. It's identical to IsActiveEQ.
func IsActive(v bool) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIsActive, v))
}

// Memo applies equality check predicate on the "memo" field. It's identical to MemoEQ.
func Memo(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldMemo, v))
}

// FirstName applies equality check predicate on the "first_name" field. It's identical to FirstNameEQ.
func FirstName(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldFirstName, v))
}

// LastName applies equality check predicate on the "last_name" field. It's identical to LastNameEQ.
func LastName(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldLastName, v))
}

// Mobile applies equality check predicate on the "mobile" field. It's identical to MobileEQ.
func Mobile(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldMobile, v))
}

// BirthDate applies equality check predicate on the "birth_date" field. It's identical to BirthDateEQ.
func BirthDate(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldBirthDate, v))
}

// IdenNo applies equality check predicate on the "iden_no" field. It's identical to IdenNoEQ.
func IdenNo(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIdenNo, v))
}

// IdenAddrID applies equality check predicate on the "iden_addr_id" field. It's identical to IdenAddrIDEQ.
func IdenAddrID(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIdenAddrID, v))
}

// ResiAddrID applies equality check predicate on the "resi_addr_id" field. It's identical to ResiAddrIDEQ.
func ResiAddrID(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldResiAddrID, v))
}

// WorkerNo applies equality check predicate on the "worker_no" field. It's identical to WorkerNoEQ.
func WorkerNo(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldWorkerNo, v))
}

// Cubicle applies equality check predicate on the "cubicle" field. It's identical to CubicleEQ.
func Cubicle(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldCubicle, v))
}

// EntryDate applies equality check predicate on the "entry_date" field. It's identical to EntryDateEQ.
func EntryDate(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldEntryDate, v))
}

// RegularDate applies equality check predicate on the "regular_date" field. It's identical to RegularDateEQ.
func RegularDate(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldRegularDate, v))
}

// ResignDate applies equality check predicate on the "resign_date" field. It's identical to ResignDateEQ.
func ResignDate(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldResignDate, v))
}

// OrgID applies equality check predicate on the "org_id" field. It's identical to OrgIDEQ.
func OrgID(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldOrgID, v))
}

// EmploymentStatus applies equality check predicate on the "employment_status" field. It's identical to EmploymentStatusEQ.
func EmploymentStatus(v int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldEmploymentStatus, v))
}

// Creator applies equality check predicate on the "creator" field. It's identical to CreatorEQ.
func Creator(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldCreator, v))
}

// IsDelEQ applies the EQ predicate on the "is_del" field.
func IsDelEQ(v bool) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIsDel, v))
}

// IsDelNEQ applies the NEQ predicate on the "is_del" field.
func IsDelNEQ(v bool) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldIsDel, v))
}

// SortEQ applies the EQ predicate on the "sort" field.
func SortEQ(v int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldSort, v))
}

// SortNEQ applies the NEQ predicate on the "sort" field.
func SortNEQ(v int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldSort, v))
}

// SortIn applies the In predicate on the "sort" field.
func SortIn(vs ...int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldSort, vs...))
}

// SortNotIn applies the NotIn predicate on the "sort" field.
func SortNotIn(vs ...int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldSort, vs...))
}

// SortGT applies the GT predicate on the "sort" field.
func SortGT(v int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldSort, v))
}

// SortGTE applies the GTE predicate on the "sort" field.
func SortGTE(v int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldSort, v))
}

// SortLT applies the LT predicate on the "sort" field.
func SortLT(v int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldSort, v))
}

// SortLTE applies the LTE predicate on the "sort" field.
func SortLTE(v int32) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldSort, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldUpdatedAt))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldDeletedAt))
}

// IsActiveEQ applies the EQ predicate on the "is_active" field.
func IsActiveEQ(v bool) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIsActive, v))
}

// IsActiveNEQ applies the NEQ predicate on the "is_active" field.
func IsActiveNEQ(v bool) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldIsActive, v))
}

// MemoEQ applies the EQ predicate on the "memo" field.
func MemoEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldMemo, v))
}

// MemoNEQ applies the NEQ predicate on the "memo" field.
func MemoNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldMemo, v))
}

// MemoIn applies the In predicate on the "memo" field.
func MemoIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldMemo, vs...))
}

// MemoNotIn applies the NotIn predicate on the "memo" field.
func MemoNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldMemo, vs...))
}

// MemoGT applies the GT predicate on the "memo" field.
func MemoGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldMemo, v))
}

// MemoGTE applies the GTE predicate on the "memo" field.
func MemoGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldMemo, v))
}

// MemoLT applies the LT predicate on the "memo" field.
func MemoLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldMemo, v))
}

// MemoLTE applies the LTE predicate on the "memo" field.
func MemoLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldMemo, v))
}

// MemoContains applies the Contains predicate on the "memo" field.
func MemoContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldMemo, v))
}

// MemoHasPrefix applies the HasPrefix predicate on the "memo" field.
func MemoHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldMemo, v))
}

// MemoHasSuffix applies the HasSuffix predicate on the "memo" field.
func MemoHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldMemo, v))
}

// MemoIsNil applies the IsNil predicate on the "memo" field.
func MemoIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldMemo))
}

// MemoNotNil applies the NotNil predicate on the "memo" field.
func MemoNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldMemo))
}

// MemoEqualFold applies the EqualFold predicate on the "memo" field.
func MemoEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldMemo, v))
}

// MemoContainsFold applies the ContainsFold predicate on the "memo" field.
func MemoContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldMemo, v))
}

// FirstNameEQ applies the EQ predicate on the "first_name" field.
func FirstNameEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldFirstName, v))
}

// FirstNameNEQ applies the NEQ predicate on the "first_name" field.
func FirstNameNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldFirstName, v))
}

// FirstNameIn applies the In predicate on the "first_name" field.
func FirstNameIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldFirstName, vs...))
}

// FirstNameNotIn applies the NotIn predicate on the "first_name" field.
func FirstNameNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldFirstName, vs...))
}

// FirstNameGT applies the GT predicate on the "first_name" field.
func FirstNameGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldFirstName, v))
}

// FirstNameGTE applies the GTE predicate on the "first_name" field.
func FirstNameGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldFirstName, v))
}

// FirstNameLT applies the LT predicate on the "first_name" field.
func FirstNameLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldFirstName, v))
}

// FirstNameLTE applies the LTE predicate on the "first_name" field.
func FirstNameLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldFirstName, v))
}

// FirstNameContains applies the Contains predicate on the "first_name" field.
func FirstNameContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldFirstName, v))
}

// FirstNameHasPrefix applies the HasPrefix predicate on the "first_name" field.
func FirstNameHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldFirstName, v))
}

// FirstNameHasSuffix applies the HasSuffix predicate on the "first_name" field.
func FirstNameHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldFirstName, v))
}

// FirstNameIsNil applies the IsNil predicate on the "first_name" field.
func FirstNameIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldFirstName))
}

// FirstNameNotNil applies the NotNil predicate on the "first_name" field.
func FirstNameNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldFirstName))
}

// FirstNameEqualFold applies the EqualFold predicate on the "first_name" field.
func FirstNameEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldFirstName, v))
}

// FirstNameContainsFold applies the ContainsFold predicate on the "first_name" field.
func FirstNameContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldFirstName, v))
}

// LastNameEQ applies the EQ predicate on the "last_name" field.
func LastNameEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldLastName, v))
}

// LastNameNEQ applies the NEQ predicate on the "last_name" field.
func LastNameNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldLastName, v))
}

// LastNameIn applies the In predicate on the "last_name" field.
func LastNameIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldLastName, vs...))
}

// LastNameNotIn applies the NotIn predicate on the "last_name" field.
func LastNameNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldLastName, vs...))
}

// LastNameGT applies the GT predicate on the "last_name" field.
func LastNameGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldLastName, v))
}

// LastNameGTE applies the GTE predicate on the "last_name" field.
func LastNameGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldLastName, v))
}

// LastNameLT applies the LT predicate on the "last_name" field.
func LastNameLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldLastName, v))
}

// LastNameLTE applies the LTE predicate on the "last_name" field.
func LastNameLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldLastName, v))
}

// LastNameContains applies the Contains predicate on the "last_name" field.
func LastNameContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldLastName, v))
}

// LastNameHasPrefix applies the HasPrefix predicate on the "last_name" field.
func LastNameHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldLastName, v))
}

// LastNameHasSuffix applies the HasSuffix predicate on the "last_name" field.
func LastNameHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldLastName, v))
}

// LastNameIsNil applies the IsNil predicate on the "last_name" field.
func LastNameIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldLastName))
}

// LastNameNotNil applies the NotNil predicate on the "last_name" field.
func LastNameNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldLastName))
}

// LastNameEqualFold applies the EqualFold predicate on the "last_name" field.
func LastNameEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldLastName, v))
}

// LastNameContainsFold applies the ContainsFold predicate on the "last_name" field.
func LastNameContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldLastName, v))
}

// MobileEQ applies the EQ predicate on the "mobile" field.
func MobileEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldMobile, v))
}

// MobileNEQ applies the NEQ predicate on the "mobile" field.
func MobileNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldMobile, v))
}

// MobileIn applies the In predicate on the "mobile" field.
func MobileIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldMobile, vs...))
}

// MobileNotIn applies the NotIn predicate on the "mobile" field.
func MobileNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldMobile, vs...))
}

// MobileGT applies the GT predicate on the "mobile" field.
func MobileGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldMobile, v))
}

// MobileGTE applies the GTE predicate on the "mobile" field.
func MobileGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldMobile, v))
}

// MobileLT applies the LT predicate on the "mobile" field.
func MobileLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldMobile, v))
}

// MobileLTE applies the LTE predicate on the "mobile" field.
func MobileLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldMobile, v))
}

// MobileContains applies the Contains predicate on the "mobile" field.
func MobileContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldMobile, v))
}

// MobileHasPrefix applies the HasPrefix predicate on the "mobile" field.
func MobileHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldMobile, v))
}

// MobileHasSuffix applies the HasSuffix predicate on the "mobile" field.
func MobileHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldMobile, v))
}

// MobileIsNil applies the IsNil predicate on the "mobile" field.
func MobileIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldMobile))
}

// MobileNotNil applies the NotNil predicate on the "mobile" field.
func MobileNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldMobile))
}

// MobileEqualFold applies the EqualFold predicate on the "mobile" field.
func MobileEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldMobile, v))
}

// MobileContainsFold applies the ContainsFold predicate on the "mobile" field.
func MobileContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldMobile, v))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v Gender) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v Gender) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...Gender) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...Gender) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldGender, vs...))
}

// GenderIsNil applies the IsNil predicate on the "gender" field.
func GenderIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldGender))
}

// GenderNotNil applies the NotNil predicate on the "gender" field.
func GenderNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldGender))
}

// BirthDateEQ applies the EQ predicate on the "birth_date" field.
func BirthDateEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldBirthDate, v))
}

// BirthDateNEQ applies the NEQ predicate on the "birth_date" field.
func BirthDateNEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldBirthDate, v))
}

// BirthDateIn applies the In predicate on the "birth_date" field.
func BirthDateIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldBirthDate, vs...))
}

// BirthDateNotIn applies the NotIn predicate on the "birth_date" field.
func BirthDateNotIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldBirthDate, vs...))
}

// BirthDateGT applies the GT predicate on the "birth_date" field.
func BirthDateGT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldBirthDate, v))
}

// BirthDateGTE applies the GTE predicate on the "birth_date" field.
func BirthDateGTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldBirthDate, v))
}

// BirthDateLT applies the LT predicate on the "birth_date" field.
func BirthDateLT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldBirthDate, v))
}

// BirthDateLTE applies the LTE predicate on the "birth_date" field.
func BirthDateLTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldBirthDate, v))
}

// BirthDateIsNil applies the IsNil predicate on the "birth_date" field.
func BirthDateIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldBirthDate))
}

// BirthDateNotNil applies the NotNil predicate on the "birth_date" field.
func BirthDateNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldBirthDate))
}

// IdenNoEQ applies the EQ predicate on the "iden_no" field.
func IdenNoEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIdenNo, v))
}

// IdenNoNEQ applies the NEQ predicate on the "iden_no" field.
func IdenNoNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldIdenNo, v))
}

// IdenNoIn applies the In predicate on the "iden_no" field.
func IdenNoIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldIdenNo, vs...))
}

// IdenNoNotIn applies the NotIn predicate on the "iden_no" field.
func IdenNoNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldIdenNo, vs...))
}

// IdenNoGT applies the GT predicate on the "iden_no" field.
func IdenNoGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldIdenNo, v))
}

// IdenNoGTE applies the GTE predicate on the "iden_no" field.
func IdenNoGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldIdenNo, v))
}

// IdenNoLT applies the LT predicate on the "iden_no" field.
func IdenNoLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldIdenNo, v))
}

// IdenNoLTE applies the LTE predicate on the "iden_no" field.
func IdenNoLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldIdenNo, v))
}

// IdenNoContains applies the Contains predicate on the "iden_no" field.
func IdenNoContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldIdenNo, v))
}

// IdenNoHasPrefix applies the HasPrefix predicate on the "iden_no" field.
func IdenNoHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldIdenNo, v))
}

// IdenNoHasSuffix applies the HasSuffix predicate on the "iden_no" field.
func IdenNoHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldIdenNo, v))
}

// IdenNoIsNil applies the IsNil predicate on the "iden_no" field.
func IdenNoIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldIdenNo))
}

// IdenNoNotNil applies the NotNil predicate on the "iden_no" field.
func IdenNoNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldIdenNo))
}

// IdenNoEqualFold applies the EqualFold predicate on the "iden_no" field.
func IdenNoEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldIdenNo, v))
}

// IdenNoContainsFold applies the ContainsFold predicate on the "iden_no" field.
func IdenNoContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldIdenNo, v))
}

// IdenAddrIDEQ applies the EQ predicate on the "iden_addr_id" field.
func IdenAddrIDEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldIdenAddrID, v))
}

// IdenAddrIDNEQ applies the NEQ predicate on the "iden_addr_id" field.
func IdenAddrIDNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldIdenAddrID, v))
}

// IdenAddrIDIn applies the In predicate on the "iden_addr_id" field.
func IdenAddrIDIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldIdenAddrID, vs...))
}

// IdenAddrIDNotIn applies the NotIn predicate on the "iden_addr_id" field.
func IdenAddrIDNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldIdenAddrID, vs...))
}

// IdenAddrIDGT applies the GT predicate on the "iden_addr_id" field.
func IdenAddrIDGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldIdenAddrID, v))
}

// IdenAddrIDGTE applies the GTE predicate on the "iden_addr_id" field.
func IdenAddrIDGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldIdenAddrID, v))
}

// IdenAddrIDLT applies the LT predicate on the "iden_addr_id" field.
func IdenAddrIDLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldIdenAddrID, v))
}

// IdenAddrIDLTE applies the LTE predicate on the "iden_addr_id" field.
func IdenAddrIDLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldIdenAddrID, v))
}

// IdenAddrIDContains applies the Contains predicate on the "iden_addr_id" field.
func IdenAddrIDContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldIdenAddrID, v))
}

// IdenAddrIDHasPrefix applies the HasPrefix predicate on the "iden_addr_id" field.
func IdenAddrIDHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldIdenAddrID, v))
}

// IdenAddrIDHasSuffix applies the HasSuffix predicate on the "iden_addr_id" field.
func IdenAddrIDHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldIdenAddrID, v))
}

// IdenAddrIDIsNil applies the IsNil predicate on the "iden_addr_id" field.
func IdenAddrIDIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldIdenAddrID))
}

// IdenAddrIDNotNil applies the NotNil predicate on the "iden_addr_id" field.
func IdenAddrIDNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldIdenAddrID))
}

// IdenAddrIDEqualFold applies the EqualFold predicate on the "iden_addr_id" field.
func IdenAddrIDEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldIdenAddrID, v))
}

// IdenAddrIDContainsFold applies the ContainsFold predicate on the "iden_addr_id" field.
func IdenAddrIDContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldIdenAddrID, v))
}

// ResiAddrIDEQ applies the EQ predicate on the "resi_addr_id" field.
func ResiAddrIDEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldResiAddrID, v))
}

// ResiAddrIDNEQ applies the NEQ predicate on the "resi_addr_id" field.
func ResiAddrIDNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldResiAddrID, v))
}

// ResiAddrIDIn applies the In predicate on the "resi_addr_id" field.
func ResiAddrIDIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldResiAddrID, vs...))
}

// ResiAddrIDNotIn applies the NotIn predicate on the "resi_addr_id" field.
func ResiAddrIDNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldResiAddrID, vs...))
}

// ResiAddrIDGT applies the GT predicate on the "resi_addr_id" field.
func ResiAddrIDGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldResiAddrID, v))
}

// ResiAddrIDGTE applies the GTE predicate on the "resi_addr_id" field.
func ResiAddrIDGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldResiAddrID, v))
}

// ResiAddrIDLT applies the LT predicate on the "resi_addr_id" field.
func ResiAddrIDLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldResiAddrID, v))
}

// ResiAddrIDLTE applies the LTE predicate on the "resi_addr_id" field.
func ResiAddrIDLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldResiAddrID, v))
}

// ResiAddrIDContains applies the Contains predicate on the "resi_addr_id" field.
func ResiAddrIDContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldResiAddrID, v))
}

// ResiAddrIDHasPrefix applies the HasPrefix predicate on the "resi_addr_id" field.
func ResiAddrIDHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldResiAddrID, v))
}

// ResiAddrIDHasSuffix applies the HasSuffix predicate on the "resi_addr_id" field.
func ResiAddrIDHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldResiAddrID, v))
}

// ResiAddrIDIsNil applies the IsNil predicate on the "resi_addr_id" field.
func ResiAddrIDIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldResiAddrID))
}

// ResiAddrIDNotNil applies the NotNil predicate on the "resi_addr_id" field.
func ResiAddrIDNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldResiAddrID))
}

// ResiAddrIDEqualFold applies the EqualFold predicate on the "resi_addr_id" field.
func ResiAddrIDEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldResiAddrID, v))
}

// ResiAddrIDContainsFold applies the ContainsFold predicate on the "resi_addr_id" field.
func ResiAddrIDContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldResiAddrID, v))
}

// WorkerNoEQ applies the EQ predicate on the "worker_no" field.
func WorkerNoEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldWorkerNo, v))
}

// WorkerNoNEQ applies the NEQ predicate on the "worker_no" field.
func WorkerNoNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldWorkerNo, v))
}

// WorkerNoIn applies the In predicate on the "worker_no" field.
func WorkerNoIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldWorkerNo, vs...))
}

// WorkerNoNotIn applies the NotIn predicate on the "worker_no" field.
func WorkerNoNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldWorkerNo, vs...))
}

// WorkerNoGT applies the GT predicate on the "worker_no" field.
func WorkerNoGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldWorkerNo, v))
}

// WorkerNoGTE applies the GTE predicate on the "worker_no" field.
func WorkerNoGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldWorkerNo, v))
}

// WorkerNoLT applies the LT predicate on the "worker_no" field.
func WorkerNoLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldWorkerNo, v))
}

// WorkerNoLTE applies the LTE predicate on the "worker_no" field.
func WorkerNoLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldWorkerNo, v))
}

// WorkerNoContains applies the Contains predicate on the "worker_no" field.
func WorkerNoContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldWorkerNo, v))
}

// WorkerNoHasPrefix applies the HasPrefix predicate on the "worker_no" field.
func WorkerNoHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldWorkerNo, v))
}

// WorkerNoHasSuffix applies the HasSuffix predicate on the "worker_no" field.
func WorkerNoHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldWorkerNo, v))
}

// WorkerNoIsNil applies the IsNil predicate on the "worker_no" field.
func WorkerNoIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldWorkerNo))
}

// WorkerNoNotNil applies the NotNil predicate on the "worker_no" field.
func WorkerNoNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldWorkerNo))
}

// WorkerNoEqualFold applies the EqualFold predicate on the "worker_no" field.
func WorkerNoEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldWorkerNo, v))
}

// WorkerNoContainsFold applies the ContainsFold predicate on the "worker_no" field.
func WorkerNoContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldWorkerNo, v))
}

// CubicleEQ applies the EQ predicate on the "cubicle" field.
func CubicleEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldCubicle, v))
}

// CubicleNEQ applies the NEQ predicate on the "cubicle" field.
func CubicleNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldCubicle, v))
}

// CubicleIn applies the In predicate on the "cubicle" field.
func CubicleIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldCubicle, vs...))
}

// CubicleNotIn applies the NotIn predicate on the "cubicle" field.
func CubicleNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldCubicle, vs...))
}

// CubicleGT applies the GT predicate on the "cubicle" field.
func CubicleGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldCubicle, v))
}

// CubicleGTE applies the GTE predicate on the "cubicle" field.
func CubicleGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldCubicle, v))
}

// CubicleLT applies the LT predicate on the "cubicle" field.
func CubicleLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldCubicle, v))
}

// CubicleLTE applies the LTE predicate on the "cubicle" field.
func CubicleLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldCubicle, v))
}

// CubicleContains applies the Contains predicate on the "cubicle" field.
func CubicleContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldCubicle, v))
}

// CubicleHasPrefix applies the HasPrefix predicate on the "cubicle" field.
func CubicleHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldCubicle, v))
}

// CubicleHasSuffix applies the HasSuffix predicate on the "cubicle" field.
func CubicleHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldCubicle, v))
}

// CubicleIsNil applies the IsNil predicate on the "cubicle" field.
func CubicleIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldCubicle))
}

// CubicleNotNil applies the NotNil predicate on the "cubicle" field.
func CubicleNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldCubicle))
}

// CubicleEqualFold applies the EqualFold predicate on the "cubicle" field.
func CubicleEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldCubicle, v))
}

// CubicleContainsFold applies the ContainsFold predicate on the "cubicle" field.
func CubicleContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldCubicle, v))
}

// EntryDateEQ applies the EQ predicate on the "entry_date" field.
func EntryDateEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldEntryDate, v))
}

// EntryDateNEQ applies the NEQ predicate on the "entry_date" field.
func EntryDateNEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldEntryDate, v))
}

// EntryDateIn applies the In predicate on the "entry_date" field.
func EntryDateIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldEntryDate, vs...))
}

// EntryDateNotIn applies the NotIn predicate on the "entry_date" field.
func EntryDateNotIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldEntryDate, vs...))
}

// EntryDateGT applies the GT predicate on the "entry_date" field.
func EntryDateGT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldEntryDate, v))
}

// EntryDateGTE applies the GTE predicate on the "entry_date" field.
func EntryDateGTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldEntryDate, v))
}

// EntryDateLT applies the LT predicate on the "entry_date" field.
func EntryDateLT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldEntryDate, v))
}

// EntryDateLTE applies the LTE predicate on the "entry_date" field.
func EntryDateLTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldEntryDate, v))
}

// EntryDateIsNil applies the IsNil predicate on the "entry_date" field.
func EntryDateIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldEntryDate))
}

// EntryDateNotNil applies the NotNil predicate on the "entry_date" field.
func EntryDateNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldEntryDate))
}

// RegularDateEQ applies the EQ predicate on the "regular_date" field.
func RegularDateEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldRegularDate, v))
}

// RegularDateNEQ applies the NEQ predicate on the "regular_date" field.
func RegularDateNEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldRegularDate, v))
}

// RegularDateIn applies the In predicate on the "regular_date" field.
func RegularDateIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldRegularDate, vs...))
}

// RegularDateNotIn applies the NotIn predicate on the "regular_date" field.
func RegularDateNotIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldRegularDate, vs...))
}

// RegularDateGT applies the GT predicate on the "regular_date" field.
func RegularDateGT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldRegularDate, v))
}

// RegularDateGTE applies the GTE predicate on the "regular_date" field.
func RegularDateGTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldRegularDate, v))
}

// RegularDateLT applies the LT predicate on the "regular_date" field.
func RegularDateLT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldRegularDate, v))
}

// RegularDateLTE applies the LTE predicate on the "regular_date" field.
func RegularDateLTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldRegularDate, v))
}

// RegularDateIsNil applies the IsNil predicate on the "regular_date" field.
func RegularDateIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldRegularDate))
}

// RegularDateNotNil applies the NotNil predicate on the "regular_date" field.
func RegularDateNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldRegularDate))
}

// ResignDateEQ applies the EQ predicate on the "resign_date" field.
func ResignDateEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldResignDate, v))
}

// ResignDateNEQ applies the NEQ predicate on the "resign_date" field.
func ResignDateNEQ(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldResignDate, v))
}

// ResignDateIn applies the In predicate on the "resign_date" field.
func ResignDateIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldResignDate, vs...))
}

// ResignDateNotIn applies the NotIn predicate on the "resign_date" field.
func ResignDateNotIn(vs ...time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldResignDate, vs...))
}

// ResignDateGT applies the GT predicate on the "resign_date" field.
func ResignDateGT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldResignDate, v))
}

// ResignDateGTE applies the GTE predicate on the "resign_date" field.
func ResignDateGTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldResignDate, v))
}

// ResignDateLT applies the LT predicate on the "resign_date" field.
func ResignDateLT(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldResignDate, v))
}

// ResignDateLTE applies the LTE predicate on the "resign_date" field.
func ResignDateLTE(v time.Time) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldResignDate, v))
}

// ResignDateIsNil applies the IsNil predicate on the "resign_date" field.
func ResignDateIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldResignDate))
}

// ResignDateNotNil applies the NotNil predicate on the "resign_date" field.
func ResignDateNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldResignDate))
}

// OrgIDEQ applies the EQ predicate on the "org_id" field.
func OrgIDEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldOrgID, v))
}

// OrgIDNEQ applies the NEQ predicate on the "org_id" field.
func OrgIDNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldOrgID, v))
}

// OrgIDIn applies the In predicate on the "org_id" field.
func OrgIDIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldOrgID, vs...))
}

// OrgIDNotIn applies the NotIn predicate on the "org_id" field.
func OrgIDNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldOrgID, vs...))
}

// OrgIDGT applies the GT predicate on the "org_id" field.
func OrgIDGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldOrgID, v))
}

// OrgIDGTE applies the GTE predicate on the "org_id" field.
func OrgIDGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldOrgID, v))
}

// OrgIDLT applies the LT predicate on the "org_id" field.
func OrgIDLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldOrgID, v))
}

// OrgIDLTE applies the LTE predicate on the "org_id" field.
func OrgIDLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldOrgID, v))
}

// OrgIDContains applies the Contains predicate on the "org_id" field.
func OrgIDContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldOrgID, v))
}

// OrgIDHasPrefix applies the HasPrefix predicate on the "org_id" field.
func OrgIDHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldOrgID, v))
}

// OrgIDHasSuffix applies the HasSuffix predicate on the "org_id" field.
func OrgIDHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldOrgID, v))
}

// OrgIDIsNil applies the IsNil predicate on the "org_id" field.
func OrgIDIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldOrgID))
}

// OrgIDNotNil applies the NotNil predicate on the "org_id" field.
func OrgIDNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldOrgID))
}

// OrgIDEqualFold applies the EqualFold predicate on the "org_id" field.
func OrgIDEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldOrgID, v))
}

// OrgIDContainsFold applies the ContainsFold predicate on the "org_id" field.
func OrgIDContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldOrgID, v))
}

// EmploymentStatusEQ applies the EQ predicate on the "employment_status" field.
func EmploymentStatusEQ(v int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldEmploymentStatus, v))
}

// EmploymentStatusNEQ applies the NEQ predicate on the "employment_status" field.
func EmploymentStatusNEQ(v int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldEmploymentStatus, v))
}

// EmploymentStatusIn applies the In predicate on the "employment_status" field.
func EmploymentStatusIn(vs ...int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldEmploymentStatus, vs...))
}

// EmploymentStatusNotIn applies the NotIn predicate on the "employment_status" field.
func EmploymentStatusNotIn(vs ...int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldEmploymentStatus, vs...))
}

// EmploymentStatusGT applies the GT predicate on the "employment_status" field.
func EmploymentStatusGT(v int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldEmploymentStatus, v))
}

// EmploymentStatusGTE applies the GTE predicate on the "employment_status" field.
func EmploymentStatusGTE(v int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldEmploymentStatus, v))
}

// EmploymentStatusLT applies the LT predicate on the "employment_status" field.
func EmploymentStatusLT(v int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldEmploymentStatus, v))
}

// EmploymentStatusLTE applies the LTE predicate on the "employment_status" field.
func EmploymentStatusLTE(v int) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldEmploymentStatus, v))
}

// CreatorEQ applies the EQ predicate on the "creator" field.
func CreatorEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEQ(FieldCreator, v))
}

// CreatorNEQ applies the NEQ predicate on the "creator" field.
func CreatorNEQ(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNEQ(FieldCreator, v))
}

// CreatorIn applies the In predicate on the "creator" field.
func CreatorIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIn(FieldCreator, vs...))
}

// CreatorNotIn applies the NotIn predicate on the "creator" field.
func CreatorNotIn(vs ...string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotIn(FieldCreator, vs...))
}

// CreatorGT applies the GT predicate on the "creator" field.
func CreatorGT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGT(FieldCreator, v))
}

// CreatorGTE applies the GTE predicate on the "creator" field.
func CreatorGTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldGTE(FieldCreator, v))
}

// CreatorLT applies the LT predicate on the "creator" field.
func CreatorLT(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLT(FieldCreator, v))
}

// CreatorLTE applies the LTE predicate on the "creator" field.
func CreatorLTE(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldLTE(FieldCreator, v))
}

// CreatorContains applies the Contains predicate on the "creator" field.
func CreatorContains(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContains(FieldCreator, v))
}

// CreatorHasPrefix applies the HasPrefix predicate on the "creator" field.
func CreatorHasPrefix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasPrefix(FieldCreator, v))
}

// CreatorHasSuffix applies the HasSuffix predicate on the "creator" field.
func CreatorHasSuffix(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldHasSuffix(FieldCreator, v))
}

// CreatorIsNil applies the IsNil predicate on the "creator" field.
func CreatorIsNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldIsNull(FieldCreator))
}

// CreatorNotNil applies the NotNil predicate on the "creator" field.
func CreatorNotNil() predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldNotNull(FieldCreator))
}

// CreatorEqualFold applies the EqualFold predicate on the "creator" field.
func CreatorEqualFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldEqualFold(FieldCreator, v))
}

// CreatorContainsFold applies the ContainsFold predicate on the "creator" field.
func CreatorContainsFold(v string) predicate.OrgStaff {
	return predicate.OrgStaff(sql.FieldContainsFold(FieldCreator, v))
}

// HasOrgan applies the HasEdge predicate on the "organ" edge.
func HasOrgan() predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OrganTable, OrganColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.OrgOrgan
		step.Edge.Schema = schemaConfig.OrgStaff
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrganWith applies the HasEdge predicate on the "organ" edge with a given conditions (other predicates).
func HasOrganWith(preds ...predicate.OrgOrgan) predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(OrganInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OrganTable, OrganColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.OrgOrgan
		step.Edge.Schema = schemaConfig.OrgStaff
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasIdenAddr applies the HasEdge predicate on the "iden_addr" edge.
func HasIdenAddr() predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, IdenAddrTable, IdenAddrColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.SysAddress
		step.Edge.Schema = schemaConfig.OrgStaff
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasIdenAddrWith applies the HasEdge predicate on the "iden_addr" edge with a given conditions (other predicates).
func HasIdenAddrWith(preds ...predicate.SysAddress) predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(IdenAddrInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, IdenAddrTable, IdenAddrColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.SysAddress
		step.Edge.Schema = schemaConfig.OrgStaff
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasResiAddr applies the HasEdge predicate on the "resi_addr" edge.
func HasResiAddr() predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, ResiAddrTable, ResiAddrColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.SysAddress
		step.Edge.Schema = schemaConfig.OrgStaff
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasResiAddrWith applies the HasEdge predicate on the "resi_addr" edge with a given conditions (other predicates).
func HasResiAddrWith(preds ...predicate.SysAddress) predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(ResiAddrInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, ResiAddrTable, ResiAddrColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.SysAddress
		step.Edge.Schema = schemaConfig.OrgStaff
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrgStaff) predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrgStaff) predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrgStaff) predicate.OrgStaff {
	return predicate.OrgStaff(func(s *sql.Selector) {
		p(s.Not())
	})
}
